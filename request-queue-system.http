
POST http://127.0.0.1:8000/auth/login
Content-Type: application/json

{
  "username": "admin",
  "password": "123"
}

### Parte do middleware C#
### Registrar usuário com biometria #1
POST http://127.0.0.1:8000/api/v1/queue/register 
Content-Type: application/json

{
  "user": {
    "name": "Maria Santos",
    "document_id": "9876563LA055",
    "phone": "+244923456789",
    "birth_date": "1995-04-12"
  },
  "biometric": {
    "biometric_id": "c13f9c04-6c88-4bb8-9a7d-0e44fcd6b2c0",
    "finger_index": 2
  }
}

### Registrar usuário com biometria #2
POST http://127.0.0.1:8000/api/v1/queue/register 
Content-Type: application/json

{
  "user": {
    "name": "Ana Lima",
    "birth_date": "2000-03-22",
    "is_pregnant": false,
    "pregnant_until": null,
    "is_disabled_temp": false,
    "disabled_until": null,
    "document_id": "0022334455",
    "phone": "945678901"
  },
  "biometric": {
    "biometric_id": "BIO004",
    "finger_index": 4
  },
  "attendance_type": "urgent",
  "operator_id": 26
}


### Registrar usuário com biometria #3
POST http://127.0.0.1:8000/api/v1/queue/register 
Content-Type: application/json

{
  "user": {
    "name": "João da Silva",
    "birth_date": "1950-05-20",
    "is_pregnant": false,
    "pregnant_until": null,
    "is_disabled_temp": false,
    "disabled_until": null,
    "document_id": "0011223344",
    "phone": "912345678"
  },
  "biometric": {
    "biometric_id": "BIO001",
    "finger_index": 1
  },
  "attendance_type": "normal",
  "operator_id": 26
}


### Registrar usuário com biometria #4
POST http://127.0.0.1:8000/api/v1/queue/register 
Content-Type: application/json

{
  "user": {
    "name": "Luiz Fernandes",
    "birth_date": "1955-09-12",
    "is_pregnant": false,
    "pregnant_until": null,
    "is_disabled_temp": false,
    "disabled_until": null,
    "document_id": "0033445566",
    "phone": "956789012"
  },
  "biometric": {
    "biometric_id": "BIO005",
    "finger_index": 1
  },
  "attendance_type": "priority",
  "operator_id": 26
}


### Parte do frontend 
### Listar a fila com usuários em espera e chamados em espera de verificação
GET http://127.0.0.1:8000/api/v1/queue/waiting-and-called


### Chamar o próximo da fila
POST http://127.0.0.1:8000/api/v1/queue/call-next

### Entrada rapida na fila
POST http://127.0.0.1:8000/api/v1/biometrics/quick-entry
Content-Type: application/json

{
  "biometric_id": "BIO005",
  "attendance_type": "priority"
}

### Autenticar user chamado
POST http://127.0.0.1:8000/api/v1/biometrics/authenticate
Content-Type: application/json

{
  "user_id": 1,
  "biometric_hash": "4dba513896b762c702594f3080eb6c45b19aef5a671a0e39fd1993878fa08e6a",
  "call_token": "cf21590c-06e7-4a1e-b4c9-21b96d9667a5",
  "operator_id": 42
}

### Verificar usuário em atendimento
GET http://127.0.0.1:8000/api/v1/queue/current

### Finalizar atendimento
POST http://127.0.0.1:8000/api/v1/queue/finish

### Cancelar atendimento
POST http://127.0.0.1:8000/api/v1/queue/cancel
Content-Type: application/json

{
  "user_id":1
}

### Reagendar
POST http://127.0.0.1:8000/api/v1/queue/requeue
Content-Type: application/json

{
  "user_id": 1,
  "attendance_type": "normal",
  "operator_id": 26
}


### Pular o próximo da fila
POST http://127.0.0.1:8000/api/v1/queue/skip



################################ OLD ################################ 

### Verificar usuário chamado (pendente de verificação)
GET http://127.0.0.1:8000/queue/called

### Iniciar escaneamento biométrico
POST http://127.0.0.1:8000/queue/scan
Content-Type: application/json

{
  "biometric_id": "c13f9c04-6c88-4bb8-9a7d-0e44fcd6b2c0"
}

### Consultar posição na fila
### Usando número de identificação
GET http://127.0.0.1:8000/queue/consult?id_number=9876563LA055

### Usando número de telefone
GET http://127.0.0.1:8000/queue/consult?phone=+244923456789




### Listar auditorias
GET http://127.0.0.1:8000/audit/

### Verificar integridade da cadeia de auditoria
GET http://127.0.0.1:8000/audit/verify

### Verificar integridade de auditoria específica
GET http://127.0.0.1:8000/audit/verify/10

### Verificar sumário da cadeia de auditoria
GET http://127.0.0.1:8000/audit/verify-summary

### É necessário validar a integridade de um registo específico (record_hash)
